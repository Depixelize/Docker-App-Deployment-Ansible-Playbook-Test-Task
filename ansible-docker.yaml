- name: Install and configure Docker on Debian 11.6 minimal
  hosts: localhost
  become: yes
  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: true
    - name: Create custom Docker network
      command: docker network create --subnet=10.0.0.0/24 custom_network
    - name: Pull and run Nginx container
      docker_container:
        name: nginx
        network_mode: custom_network
        ipv4_address: 10.0.0.2
        ports:
          - "80:80"
        image: nginx:alpine
    - name: Pull and run Apache container
      docker_container:
        name: apache1
        network_mode: custom_network
        ipv4_address: 10.0.0.3
        ports:
          - "8080:80"
        image: httpd:2.4-alpine
    - name: Pull and run second Apache container
      docker_container:
        name: apache2
        network_mode: custom_network
        ipv4_address: 10.0.0.4
        ports:
          - "8081:80"
        image: httpd:2.4-alpine
    - name: Pull and run Node exporter container
      command: docker run --name node_exporter --net custom_network --ip 10.0.0.5 prom/node-exporter
    - name: Pull and run Nginx exporter container
      command: docker run --name nginx_exporter --net custom_network --ip 10.0.0.6 quay.io/prometheus/nginx-exporter
    - name: Pull and run MySQL exporter container
      command: docker run --name mysql_exporter --net custom_network --ip 10.0.0.7 prom/mysqld-exporter
    - name: Pull and run Cadvisor container
      command: docker run --name cadvisor --net custom_network --ip 10.0.0.8 google/cadvisor
    - name: Pull and run Prometheus container
      command: docker run --name prometheus --net custom_network --ip 10.0.0.9 prom/prometheus
    - name: Pull and run Grafana container
      command: docker run --name grafana --net custom_network --ip 10.0.0.10 grafana/grafana
    - name: Pull and run Fluentd container
      command: docker run --name fluentd --net custom_network --ip 10.0.0.11 fluent/fluentd
    - name: Pull and run MySQL container
      command: docker run --name mysql --net custom_network --ip 10.0.0.12 -e MYSQL_ROOT_PASSWORD=password mysql:5.7
    - name: Create necessary directories and configs
      file:
        path: /srv/nginx/conf
        state: directory
      file:
        path: /srv/nginx/logs
        state: directory
      file:
        path: /srv/apache/conf
        state: directory
      file:
        path: /srv/apache/logs
        state: directory
      file:
        path: /srv/mysql/conf
        state: directory
      file:
        path: /srv/mysql/logs
        state: directory
      file:
        path: /srv/www/html
        state: directory
    - name: Create custom Nginx log format
      lineinfile:
        path: /srv/nginx/conf/nginx.conf
        line: 'log_format custom_format '
        line: '"$time_local $request_time $upstream_time $remote_addr $remote_user $time_local $request $status $body_bytes_sent $http_referer $http_user_agent $geoip_country_code";'
    - name: Create DNS records
      lineinfile:
        path: /etc/hosts
        line: '10.0.0.2 first.tst'
        line: '10.0.0.2 second.tst'
    - name: Create Node exporter config
      lineinfile:
        path: /srv/node_exporter/conf/node_exporter.yml
        line: 'scrape_configs:'
        line: '  - job_name: "node_exporter"'
        line: '    static_configs:'
        line: '      - targets: ["10.0.0.5:9100"]'
    - name: Configure MySQL
      command: mysql_secure_installation
      args:
        prompt:
          - "Enter current password for root (enter for none):"
          - "Set root password? [Y/n]"
          - "Remove anonymous users? [Y/n]"
          - "Disallow root login remotely? [Y/n]"
          - "Remove test database and access to it? [Y/n]"
          - "Reload privilege tables now? [Y/n]"
        answer:
          - ""
          - "Y"
          - "Y"
          - "Y"
          - "Y"
          - "Y"
    - name: Create test database
      command: mysql -u root -p -e "CREATE DATABASE test_db;"
    - name: Create database user
      command: mysql -u root -p -e "CREATE USER 'test_user'@'localhost' IDENTIFIED BY 'password';"
    - name: Mount volumes
      mount:
        path: /srv/nginx/conf
        src: /var/lib/docker/volumes/nginx_conf
        fstype: none
        opts: bind
      mount:
        path: /srv/nginx/logs
        src: /var/lib/docker/volumes/nginx_logs
        fstype: none
        opts: bind
      mount:
        path: /srv/apache/conf
        src: /var/lib/docker/volumes/apache_conf
        fstype: none
        opts: bind
      mount:
        path: /srv/apache/logs
        src: /var/lib/docker/volumes/apache_logs
        fstype: none
        opts: bind
      mount:
        path: /srv/mysql/conf
        src: /var/lib/docker/volumes/mysql_conf
        fstype: none
        opts: bind
      mount:
        path: /srv/mysql/logs
        src: /var/lib/docker/volumes/mysql_logs
        fstype: none
        opts: bind
      mount:
        path: /srv/www/html
        src: /var/lib/docker/volumes/www_html
        fstype: none
        opts: bind
    - name: Restart Docker service
      service:
        name: docker
        state: restarted
        enabled: true
    - name: Restart Nginx container
      command: docker restart nginx
    - name: Restart Apache containers
      command: docker restart apache1
      command: docker restart apache2
    - name: Restart Node exporter container
      command: docker restart node_exporter
    - name: Restart Nginx exporter container
      command: docker restart nginx_exporter
    - name: Restart MySQL exporter container
      command: docker restart mysql_exporter
    - name: Restart Cadvisor container
      command: docker restart cadvisor
    - name: Restart Prometheus container
      command: docker restart prometheus
    - name: Restart Grafana container
      command: docker restart grafana
    - name: Restart Fluentd container
      command: docker restart fluentd
    - name: Restart MySQL container
      command: docker restart mysql
    - name: Check if all containers are running
      command: docker ps
