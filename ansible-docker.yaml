- name: Install and configure Docker on Debian 11.6 minimal
  hosts: all
  become: yes
  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: true
    - name: Create custom Docker network
      command: docker network create --subnet=10.0.0.0/24 custom_network
    - name: Pull and run Nginx container
      docker_container:
        name: nginx
        image: nginx:alpine
        network_mode: custom_network
        ports:
          - "80:80"
    - name: Pull and run Apache container
      docker_container:
        name: apache1
        image: httpd:2.4-alpine
        network_mode: custom_network
        ports:
          - "8080:80"
        volumes:
          - "/srv/apache/conf:/usr/local/apache2/conf"
          - "/srv/apache/logs:/usr/local/apache2/logs"
    - name: Pull and run second Apache container
      docker_container:
        name: apache2
        image: httpd:2.4-alpine
        network_mode: custom_network
        ports:
          - "8081:80"
        volumes:
          - "/srv/apache/conf:/usr/local/apache2/conf"
          - "/srv/apache/logs:/usr/local/apache2/logs"
    - name: Pull and run Node exporter container
      docker_container:
        name: node_exporter
        image: prom/node-exporter
        network_mode: custom_network
    - name: Pull and run Nginx exporter container
      docker_container:
        name: nginx_exporter
        image: quay.io/prometheus/nginx-exporter
        network_mode: custom_network
    - name: Pull and run MySQL exporter container
      docker_container:
        name: mysql_exporter
        image: prom/mysqld-exporter
        network_mode: custom_network
    - name: Pull and run Cadvisor container
      docker_container:
        name: cadvisor
        image: google/cadvisor
        network_mode: custom_network
    - name: Pull and run Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus
        network_mode: custom_network
    - name: Pull and run Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana
        network_mode: custom_network
    - name: Pull and run Fluentd container
      docker_container:
        name: fluentd
        image: fluent/fluentd
        network_mode: custom_network
    - name: Pull and run MySQL container
      docker_container:
        name: mysql
        image: mysql:5.7
        network_mode: custom_network
        env:
          MYSQL_ROOT_PASSWORD: password
    - name: Pull and run PHP-FPM container
      docker_container:
        name: php-fpm
        image: php:7.2-fpm
        network_mode: custom_network
        volumes:
          - "/srv/www/html:/var/www/html"
    - name: Create directories
      file:
        path: "/srv/{{ item }}"
        state: directory
      with_items:
        - nginx
        - apache
        - mysql
        - www
    - name: Create config files
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - { src: "nginx.conf.j2", dest: "/srv/nginx/conf/nginx.conf" }
        - { src: "apache.conf.j2", dest: "/srv/apache/conf/apache.conf" }
        - { src: "mysql.conf.j2", dest: "/srv/mysql/conf/mysql.conf" }
    - name: Create custom Nginx log format
      lineinfile:
        path: /srv/nginx/conf/nginx.conf
        line: 'log_format custom_format '
        line: '"$time_local $request_time $upstream_time $remote_addr $remote_user $time_local $request $status $body_bytes_sent $http_referer $http_user_agent $geoip_country_code";'
    - name: Create DNS records
      lineinfile:
        path: /etc/hosts
        line: '10.0.0.2 nginx'
        line: '10.0.0.3 apache1'
        line: '10.0.0.4 apache2'
        line: '10.0.0.5 node_exporter'
        line: '10.0.0.6 nginx_exporter'
        line: '10.0.0.7 mysql_exporter'
        line: '10.0.0.8 cadvisor'
        line: '10.0.0.9 prometheus'
        line: '10.0.0.10 grafana'
        line: '10.0.0.11 fluentd'
        line: '10.0.0.12 mysql'
        line: '10.0.0.2 first.tst'
        line: '10.0.0.2 second.tst'
    - name: Restart Docker service
      service:
        name: docker
        state: restarted
        enabled: true
    - name: Restart Nginx container
      command: docker restart nginx
    - name: Restart Apache containers
      command: docker restart apache1
      command: docker restart apache2
    - name: Restart Node exporter container
      command: docker restart node_exporter
    - name: Restart Nginx exporter container
      command: docker restart nginx_exporter
    - name: Restart MySQL exporter container
      command: docker restart mysql_exporter
    - name: Restart Cadvisor container
      command: docker restart cadvisor
    - name: Restart Prometheus container
      command: docker restart prometheus
    - name: Restart Grafana container
      command: docker restart grafana
    - name: Restart Fluentd container
      command: docker restart fluentd
    - name: Restart MySQL container
      command: docker restart mysql
    - name: Check if all containers are running
      command: docker ps
