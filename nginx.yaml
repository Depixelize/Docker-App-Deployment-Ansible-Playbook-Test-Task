---
- name: Install Apache Docker Container with PHP 7.2 and Nginx with GeoIP support
  hosts: localhost
  become: true
  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
      register: docker_install

    - name: Install Python Pip
      apt:
        name: python3-mysqldb
        state: present
      register: python_mysqldb_install

    - name: Install Python Pip
      apt:
        name: python3-pip
        state: present
      register: python_pip_install

    - name: Install Docker-py
      pip:
        name: docker-py
        state: present

    - name: Pull Apache-PHP 7.2 Docker Image
      docker_image:
        name: php:7.2-apache
        source: pull
        state: present

    - name: Pull Nginx with Geoip Docker Image
      docker_image:
        name: admintuts/nginx:1.21.4-rtmp-geoip2-alpine
        source: pull
        state: present

    - name: Pull Nginx-Exporter for Prometheus
      docker_image:
        name: nginx/nginx-prometheus-exporter
        source: pull
        state: present

    - name: Create custom Docker network
      command: docker network create --subnet=10.0.0.0/24 custom_network

    - name: Create folder structure
      file:
        path: "/srv"
        state: directory
        mode: 0755

    - name: Create Nginx config folder
      file:
        path: "/srv/nginx/conf"
        state: directory
        mode: 0755

    - name: Create Nginx logs folder
      file:
        path: "/srv/nginx/logs"
        state: directory
        mode: 0777

    - name: Create Apache01 config folder
      file:
        path: "/srv/apache/conf/apache01"
        state: directory
        mode: 0755

    - name: Create Apache02 config folder
      file:
        path: "/srv/apache/conf/apache02"
        state: directory
        mode: 0755

    - name: Create Apache logs folder
      file:
        path: "/srv/apache/logs"
        state: directory
        mode: 0755

    - name: Create MySQL config folder
      file:
        path: "/srv/mysql/conf"
        state: directory
        mode: 0755

    - name: Create MySQL logs folder
      file:
        path: "/srv/mysql/logs"
        state: directory
        mode: 0755

    - name: Create MySQL pid folder
      file:
        path: "/srv/mysql/mysqld"
        state: directory
        mode: 0755

    - name: Create Fluentd config folder
      file:
        path: "/srv/fluentd/conf"
        state: directory
        mode: 0755

    - name: Create Prometheus config folder
      file:
        path: "/srv/prometheus/conf"
        state: directory
        mode: 0755

    - name: Create Grafana folder
      file:
        path: "/srv/grafana"
        state: directory
        mode: 0755

    - name: Create content folder
      file:
        path: "/srv/www/html"
        state: directory
        mode: 0755

    - name: Create first.tst domain
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 first.tst"
        state: present

    - name: Create second.tst domain
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 second.tst"
        state: present

    - name: Create first.tst domain
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 prometheus.tst"
        state: present

    - name: Create first.tst domain
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 grafana.tst"
        state: present

    - name: Create first.tst folder
      file:
        path: "/srv/www/html/first"
        state: directory
        mode: 0755

    - name: Create second.tst folder
      file:
        path: "/srv/www/html/second"
        state: directory
        mode: 0755

    - name: Copy index.php to first.tst folder
      copy:
        src: index.php
        dest: "/srv/www/html/first"

    - name: Copy index.php to second.tst folder
      copy:
        src: index.php
        dest: "/srv/www/html/second"

    - name: Create Nginx Container
      docker_container:
        name: nginx
        image: admintuts/nginx:1.21.4-rtmp-geoip2-alpine
        state: started
        restart_policy: always
        ports:
          - "80:80"
        networks:
          - name: custom_network
            ipv4_address: 10.0.0.2
        volumes:
          - "/srv/nginx/conf:/etc/nginx/conf.d"
          - "/srv/nginx/logs:/var/log/nginx"

    - name: Create Apache-PHP 7.2 Container-01
      docker_container:
        name: apache01
        image: php:7.2-apache
        state: started
        restart_policy: always
        ports:
          - "8081:8081"
        networks:
          - name: custom_network
            ipv4_address: 10.0.0.3
        volumes:
          - "/srv/apache/conf/apache01:/etc/apache2/sites-enabled"
          - "/srv/apache/logs:/var/log/apache2"
          - "/srv/www/html:/var/www/html"

    - name: Create Apache-PHP 7.2 Container-02
      docker_container:
        name: apache02
        image: php:7.2-apache
        state: started
        restart_policy: always
        ports:
          - "8082:8082"
        networks:
          - name: custom_network
            ipv4_address: 10.0.0.4
        volumes:
          - "/srv/apache/conf/apache02:/etc/apache2/sites-enabled"
          - "/srv/apache/logs:/var/log/apache2"
          - "/srv/www/html:/var/www/html"

    - name: Install Nginx Exporter
      docker_container:
        name: nginx_exporter
        image: nginx/nginx-prometheus-exporter
        state: started
        restart_policy: always
        ports:
          - "9113:9113"
        networks:
          - name: custom_network
            ipv4_address: 10.0.0.5
        volumes:
          - "/srv/nginx/conf:/etc/nginx/conf.d"
        env:
          SCRAPE_URI: "http://10.0.0.2:8080/metrics"

    - name: Copy Nginx config w/o logs to nginx container
      command: docker cp nginx.conf nginx:/etc/nginx

    - name: Copy Apache config w/o ports to apache01 container
      command: docker cp apache2.conf apache01:/etc/apache2/apache2.conf

    - name: Copy Apache config w/o ports to apache02 container
      command: docker cp apache2.conf apache02:/etc/apache2/apache2.conf

    - name: Copying Nginx-proxy config
      copy:
        src: nginx-proxy.conf
        dest: "/srv/nginx/conf/nginx.conf"

    - name: Copying Apache01 first.tst virtual server config
      copy:
        src: apache01.conf
        dest: "/srv/apache/conf/apache01/apache01.conf"

    - name: Copying Apache02 second.tst virtual server config
      copy:
        src: apache02.conf
        dest: "/srv/apache/conf/apache02/apache02.conf"

    - name: Restart containers
      command: docker restart nginx apache01 apache02 nginx_exporter